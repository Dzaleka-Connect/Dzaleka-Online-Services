---
import MainLayout from '../../layouts/MainLayout.astro';

const pageTitle = "Request Skills Help";
const pageDescription = "Submit a request for skills training or assistance";

const skillCategories = [
  'Photography',
  'Business',
  'Handicrafts',
  'Technology',
  'Language Learning',
  'Music',
  'Art',
  'Cooking'
];
---

<MainLayout title={pageTitle} description={pageDescription}>
  <div class="bg-white">
    <div class="max-w-7xl mx-auto py-16 px-4 sm:px-6 lg:py-20 lg:px-8">
      <div class="max-w-3xl mx-auto">
        <div class="text-center mb-12">
          <h1 class="text-4xl font-extrabold text-gray-900 sm:text-5xl sm:tracking-tight lg:text-6xl">
            Request Skills Help
          </h1>
          <p class="mt-4 text-xl text-gray-500">
            Submit your request for skills training or assistance
          </p>
        </div>

        <form id="requestForm" action="https://formspree.io/f/xqaaajae" method="POST" class="space-y-8">
          <input type="hidden" name="_subject" value="New Skills Request Submission" />
          <input type="hidden" name="_next" value="/skills-exchange/thank-you" />
          
          <div class="space-y-8 divide-y divide-gray-200">
            <div class="space-y-6 sm:space-y-5">
              <div class="space-y-6 sm:space-y-5">
                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="name" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Full Name
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input type="text" name="name" id="name" required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md" />
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="email" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Email
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input type="email" name="email" id="email" required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md" />
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="skillCategory" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Skill Category
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <select id="skillCategory" name="skillCategory" required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md">
                      <option value="">Select a category</option>
                      {skillCategories.map((category) => (
                        <option value={category.toLowerCase()}>{category}</option>
                      ))}
                    </select>
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="skillRequested" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Specific Skill
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input type="text" name="skillRequested" id="skillRequested" required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                      placeholder="What specific skill would you like to learn?" />
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="description" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Request Details
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <textarea id="description" name="description" rows="4" required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                      placeholder="Please describe what you'd like to learn and your current skill level..."></textarea>
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="availability" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Your Availability
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <textarea id="availability" name="availability" rows="3" required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                      placeholder="When are you available for learning sessions?"></textarea>
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="preferredContact" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Preferred Contact Method
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <select id="preferredContact" name="preferredContact" required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md">
                      <option value="email">Email</option>
                      <option value="phone">Phone</option>
                      <option value="whatsapp">WhatsApp</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="pt-5">
            <div class="flex justify-end">
              <button type="button" onclick="window.location.href='/skills-exchange'"
                class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                Cancel
              </button>
              <button type="submit"
                class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                Submit Request
              </button>
            </div>
          </div>
        </form>

        <!-- Success Message -->
        <div id="successMessage" class="hidden mt-4 rounded-md bg-green-50 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm font-medium text-green-800">Request submitted successfully!</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</MainLayout>

<script>
  const form = document.getElementById('requestForm') as HTMLFormElement;
  const successMessage = document.getElementById('successMessage');

  if (form && successMessage) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      try {
        // Submit form to Formspree
        await fetch(form.action, {
          method: 'POST',
          body: new FormData(form),
          headers: {
            'Accept': 'application/json'
          }
        });

        // Show success message
        successMessage.classList.remove('hidden');
        form.reset();

        // Redirect after a short delay
        setTimeout(() => {
          window.location.href = '/skills-exchange';
        }, 2000);
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred. Please try again.');
      }
    });
  }
</script>
