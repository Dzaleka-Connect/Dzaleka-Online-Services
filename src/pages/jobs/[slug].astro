---
import MainLayout from '../../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';
import { formatDate } from '../../utils/dateHelpers';

export async function getStaticPaths() {
  const jobs = await getCollection('jobs');
  return jobs.map(job => ({
    params: { slug: job.slug },
    props: { job }
  }));
}

const { job } = Astro.props;
const { Content } = await job.render();

// Check if job is closed
const currentDate = new Date();
const isExpired = new Date(job.data.deadline) < currentDate;
const isClosed = job.data.status === 'closed' || isExpired;

// Get related jobs
const allJobs = await getCollection('jobs');
const relatedJobs = allJobs
  .filter(j => 
    j.slug !== job.slug && 
    !isClosed &&
    (j.data.category === job.data.category || j.data.type === job.data.type)
  )
  .slice(0, 3);
---

<MainLayout title={job.data.title}>
  <div class="min-h-screen bg-gradient-to-b from-gray-50 via-white to-gray-50">
    <!-- Job Header -->
    <div class="bg-gradient-to-r from-primary-600 to-primary-800">
      <div class="max-w-7xl mx-auto px-4 py-8 sm:py-12">
        <div class="text-center">
          <div class="flex items-center justify-center mb-6">
            <a 
              href="/jobs" 
              class="inline-flex items-center text-primary-100 hover:text-white transition-colors"
            >
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
              </svg>
              Back to Jobs
            </a>
          </div>
          <h1 class="text-2xl sm:text-3xl font-bold text-white mb-2">{job.data.title}</h1>
          <p class="text-lg sm:text-xl text-primary-100 mb-4">{job.data.organization}</p>
          {isClosed ? (
            <div class="inline-flex items-center px-4 py-2 rounded-md bg-gray-800 text-white mb-6">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m0 0v2m0-2h2m-2 0H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              This position is no longer accepting applications
            </div>
          ) : (
            <div class="flex flex-wrap justify-center gap-4">
              <a 
                href={`mailto:${job.data.contact.email}?subject=Application for ${job.data.title}`}
                class="inline-flex items-center px-6 py-3 border border-transparent rounded-md shadow-sm text-base font-medium text-primary-600 bg-white hover:bg-primary-50"
              >
                Apply Now
              </a>
              {job.data.contact.website && (
                <a 
                  href={job.data.contact.website}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center px-6 py-3 border border-white rounded-md text-base font-medium text-white hover:bg-white/10"
                >
                  Visit Website
                </a>
              )}
            </div>
          )}
        </div>
      </div>
    </div>

    <!-- Job Content -->
    <div class="max-w-7xl mx-auto px-4 py-8 sm:py-12">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Sidebar (moves to top on mobile) -->
        <div class="lg:col-span-1 lg:order-2 space-y-6">
          <!-- Job Overview -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200/50 overflow-hidden">
            <div class="p-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">Job Overview</h3>
              <dl class="space-y-4">
                <div>
                  <dt class="text-sm font-medium text-gray-500">Status</dt>
                  <dd class="mt-1">
                    <span class:list={[
                      'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',
                      isClosed 
                        ? 'bg-gray-100 text-gray-800'
                        : 'bg-green-100 text-green-800'
                    ]}>
                      {isClosed ? 'Closed' : 'Open'}
                    </span>
                  </dd>
                </div>
                <div>
                  <dt class="text-sm font-medium text-gray-500">Location</dt>
                  <dd class="mt-1 text-sm text-gray-900">{job.data.location}</dd>
                </div>
                <div class="flex flex-wrap gap-4">
                  <div class="flex-1">
                    <dt class="text-sm font-medium text-gray-500">Job Type</dt>
                    <dd class="mt-1">
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium capitalize" style="background-color: #E5F3FF; color: #0072E5">
                        {job.data.type}
                      </span>
                    </dd>
                  </div>
                  <div class="flex-1">
                    <dt class="text-sm font-medium text-gray-500">Category</dt>
                    <dd class="mt-1">
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium capitalize" style="background-color: #F0F7FF; color: #0072E5">
                        {job.data.category}
                      </span>
                    </dd>
                  </div>
                </div>
                <div>
                  <dt class="text-sm font-medium text-gray-500">Posted</dt>
                  <dd class="mt-1 text-sm text-gray-900">{formatDate(job.data.posted)}</dd>
                </div>
                <div>
                  <dt class="text-sm font-medium text-gray-500">Deadline</dt>
                  <dd class:list={[
                    'mt-1 text-sm',
                    isExpired ? 'text-red-600' : 'text-gray-900'
                  ]}>
                    {formatDate(job.data.deadline)}
                    {isExpired && ' (Expired)'}
                  </dd>
                </div>
                {job.data.skills && (
                  <div>
                    <dt class="text-sm font-medium text-gray-500">Required Skills</dt>
                    <dd class="mt-2">
                      <div class="flex flex-wrap gap-2">
                        {job.data.skills.map(skill => (
                          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800">
                            {skill}
                          </span>
                        ))}
                      </div>
                    </dd>
                  </div>
                )}
              </dl>
            </div>
          </div>

          <!-- Contact Information -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200/50 overflow-hidden">
            <div class="p-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">Contact Information</h3>
              <dl class="space-y-4">
                <div>
                  <dt class="text-sm font-medium text-gray-500">Email</dt>
                  <dd class="mt-1 text-sm text-gray-900">
                    <a href={`mailto:${job.data.contact.email}`} class="text-primary-600 hover:text-primary-500 break-all">
                      {job.data.contact.email}
                    </a>
                  </dd>
                </div>
                {job.data.contact.phone && (
                  <div>
                    <dt class="text-sm font-medium text-gray-500">Phone</dt>
                    <dd class="mt-1 text-sm text-gray-900">
                      <a href={`tel:${job.data.contact.phone}`} class="text-primary-600 hover:text-primary-500">
                        {job.data.contact.phone}
                      </a>
                    </dd>
                  </div>
                )}
                {job.data.contact.website && (
                  <div>
                    <dt class="text-sm font-medium text-gray-500">Website</dt>
                    <dd class="mt-1 text-sm text-gray-900">
                      <a 
                        href={job.data.contact.website}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-primary-600 hover:text-primary-500 break-all"
                      >
                        {new URL(job.data.contact.website).hostname}
                      </a>
                    </dd>
                  </div>
                )}
              </dl>
            </div>
          </div>

          <!-- How to Apply -->
          {!isClosed && (
            <div class="bg-gradient-to-br from-primary-500 to-primary-600 rounded-xl shadow-lg overflow-hidden">
              <div class="p-6">
                <h3 class="text-lg font-semibold text-white mb-4">How to Apply</h3>
                <div class="text-primary-100 space-y-4">
                  {job.data.title === "Social Media Content Creator" && (
                    <>
                      <p>Send the following to {job.data.contact.email} by {formatDate(job.data.deadline)}:</p>
                      <ul class="list-disc list-inside space-y-2">
                        <li>30-60 second reel on refugees in Malawi</li>
                        <li>Your portfolio</li>
                        <li>Proposed fee structure</li>
                      </ul>
                    </>
                  )}
                  {job.data.title === "Programs Manager" && (
                    <>
                      <p>Submit your application to {job.data.contact.email} by {formatDate(job.data.deadline)}:</p>
                      <ul class="list-disc list-inside space-y-2">
                        <li>Cover letter</li>
                        <li>CV (not more than two pages)</li>
                      </ul>
                      <p class="text-sm italic mt-2">This position is open to Malawian nationals only.</p>
                    </>
                  )}
                  {job.data.title === "Language Exchange Program" && (
                    <p>For more information contact Emily from Refugee Outreach Collective at {job.data.contact.email}</p>
                  )}
                  {!["Social Media Content Creator", "Programs Manager", "Language Exchange Program"].includes(job.data.title) && (
                    <p>To apply, please send your application to {job.data.contact.email}</p>
                  )}
                  <a 
                    href={`mailto:${job.data.contact.email}?subject=Application for ${job.data.title}`}
                    class="mt-4 block w-full text-center px-4 py-2 border border-white rounded-md text-white hover:bg-white hover:text-primary-600 transition-colors"
                  >
                    Apply Now
                  </a>
                </div>
              </div>
            </div>
          )}
        </div>

        <!-- Main Content -->
        <div class="lg:col-span-2 lg:order-1">
          <div class="bg-white rounded-xl shadow-sm border border-gray-200/50 overflow-hidden">
            <div class="p-6 sm:p-8">
              <!-- Job Description -->
              <div class="prose prose-blue max-w-none">
                <Content />
              </div>
            </div>
          </div>

          <!-- Related Jobs -->
          {relatedJobs.length > 0 && (
            <div class="mt-8">
              <h2 class="text-xl font-semibold text-gray-900 mb-4">Similar Opportunities</h2>
              <div class="grid gap-4">
                {relatedJobs.map(relatedJob => (
                  <a 
                    href={`/jobs/${relatedJob.slug}`}
                    class="block bg-white p-6 rounded-lg shadow-sm border border-gray-200/50 hover:border-primary-500 transition-colors"
                  >
                    <h3 class="text-lg font-medium text-gray-900">{relatedJob.data.title}</h3>
                    <p class="text-sm text-gray-500 mt-1">{relatedJob.data.organization}</p>
                  </a>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  </div>
</MainLayout>
