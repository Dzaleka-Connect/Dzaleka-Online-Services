---
import MainLayout from '../../layouts/MainLayout.astro';
import EventGrid from '../../components/events/EventGrid.astro';
import EventPagination from '../../components/events/EventPagination.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const allEvents = await getCollection('events');
  const itemsPerPage = 6;
  const totalPages = Math.ceil(allEvents.length / itemsPerPage);
  
  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: (i + 2).toString() }, // Start from page 2
  }));
}

const { page } = Astro.params;
const currentPage = parseInt(page);

// Get all events
const allEvents = await getCollection('events');

// Sort events by status and date
const sortedEvents = allEvents.sort((a, b) => {
  if (a.data.status !== b.data.status) {
    return a.data.status === 'upcoming' ? -1 : 1;
  }
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});

// Pagination
const itemsPerPage = 6;
const totalItems = sortedEvents.length;
const totalPages = Math.max(1, Math.ceil(totalItems / itemsPerPage));
const validCurrentPage = Math.max(1, Math.min(currentPage, totalPages));
const startIndex = (validCurrentPage - 1) * itemsPerPage;
const endIndex = Math.min(startIndex + itemsPerPage, totalItems);
const paginatedEvents = sortedEvents.slice(startIndex, endIndex);

// Redirect if page is invalid
if (currentPage < 2) {
  return Astro.redirect('/events');
}
---

<MainLayout title="Events">
  <main class="container mx-auto px-4 py-8">
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-8">
      <h1 class="text-3xl font-bold text-gray-900">Events</h1>
      <a 
        href="/events/organize" 
        class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
        aria-label="Submit Event"
      >
        <span class="text-white text-lg font-bold mr-1" aria-hidden="true">+</span>
        Submit Event
      </a>
    </div>

    {totalItems > 0 ? (
      <EventGrid events={paginatedEvents} />
    ) : (
      <div class="text-center py-8">
        <p class="text-gray-500">No events found.</p>
      </div>
    )}
    
    {totalPages > 1 && (
      <EventPagination 
        currentPage={validCurrentPage}
        totalPages={totalPages}
        baseUrl={(page) => `/events/page/${page}`}
      />
    )}
  </main>
</MainLayout>