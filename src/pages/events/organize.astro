---
import Layout from '../../layouts/Layout.astro';

const pageTitle = "Organize an Event";
const pageDescription = "Create and organize events in the Dzaleka community";
---

<Layout title={pageTitle} description={pageDescription}>
  <div class="bg-white">
    <div class="max-w-7xl mx-auto py-16 px-4 sm:px-6 lg:py-20 lg:px-8">
      <div class="max-w-3xl mx-auto text-center mb-12">
        <h1 class="text-4xl font-extrabold text-gray-900 sm:text-5xl sm:tracking-tight lg:text-6xl">
          Organize an Event
        </h1>
        <p class="mt-4 text-xl text-gray-500">
          Share your events with the Dzaleka community
        </p>
      </div>

      <div class="mt-12">
        <form id="eventForm" action="https://formspree.io/f/xqaaajae" method="POST" class="space-y-8">
          <!-- Add hidden field for form name -->
          <input type="hidden" name="_subject" value="New Event Submission" />
          <input type="hidden" name="imageUrl" id="imageUrlInput" />
          
          <div class="space-y-8 divide-y divide-gray-200">
            <div class="space-y-6 sm:space-y-5">
              <div>
                <h3 class="text-lg leading-6 font-medium text-gray-900">
                  Event Details
                </h3>
                <p class="mt-1 max-w-2xl text-sm text-gray-500">
                  Provide information about your event
                </p>
              </div>

              <div class="space-y-6 sm:space-y-5">
                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="title" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Event Title
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input
                      type="text"
                      name="title"
                      id="title"
                      required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                    />
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="description" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Description
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <textarea
                      id="description"
                      name="description"
                      rows="4"
                      required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                    ></textarea>
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="category" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Category
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <select
                      id="category"
                      name="category"
                      required
                      class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md"
                    >
                      <option value="">Select a category</option>
                      <option value="cultural">Cultural</option>
                      <option value="educational">Educational</option>
                      <option value="sports">Sports</option>
                      <option value="community">Community</option>
                      <option value="arts">Arts & Entertainment</option>
                      <option value="other">Other</option>
                    </select>
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="date" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Date & Time
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input
                      type="datetime-local"
                      name="date"
                      id="date"
                      required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                    />
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="location" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Location
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input
                      type="text"
                      name="location"
                      id="location"
                      required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                    />
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="capacity" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Capacity (optional)
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input
                      type="number"
                      name="capacity"
                      id="capacity"
                      min="1"
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                    />
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="image" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Event Image
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input
                      type="file"
                      name="image"
                      id="image"
                      accept="image/*"
                      class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100"
                    />
                    <p id="uploadStatus" class="mt-2 text-sm text-gray-500"></p>
                  </div>
                </div>
              </div>
            </div>

            <div class="pt-8 space-y-6 sm:pt-10 sm:space-y-5">
              <div>
                <h3 class="text-lg leading-6 font-medium text-gray-900">
                  Organizer Information
                </h3>
                <p class="mt-1 max-w-2xl text-sm text-gray-500">
                  Your contact information for event coordination
                </p>
              </div>

              <div class="space-y-6 sm:space-y-5">
                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="organizerName" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Name
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input
                      type="text"
                      name="organizerName"
                      id="organizerName"
                      required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                    />
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="organizerEmail" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Email
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input
                      type="email"
                      name="organizerEmail"
                      id="organizerEmail"
                      required
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                    />
                  </div>
                </div>

                <div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start">
                  <label for="organizerPhone" class="block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2">
                    Phone (optional)
                  </label>
                  <div class="mt-1 sm:mt-0 sm:col-span-2">
                    <input
                      type="tel"
                      name="organizerPhone"
                      id="organizerPhone"
                      class="block w-full shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm border-gray-300 rounded-md"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Add success redirect -->
          <input type="hidden" name="_next" value="/events" />

          <div class="pt-5">
            <div class="flex justify-end">
              <button
                type="button"
                id="cancelButton"
                class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
              >
                Cancel
              </button>
              <button
                type="submit"
                id="submitButton"
                class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
              >
                <span id="submitText">New Event</span>
                <span id="submitSpinner" class="hidden ml-2">Submitting...</span>
              </button>
            </div>
          </div>
        </form>

        <!-- Success Message -->
        <div id="successMessage" class="hidden mt-4 rounded-md bg-green-50 p-4">
          <div class="flex">
            <div class="ml-3">
              <p class="text-sm font-medium text-green-800">
                Event created successfully! Redirecting to events page...
              </p>
            </div>
          </div>
        </div>

        <!-- Error Message -->
        <div id="errorMessage" class="hidden mt-4 rounded-md bg-red-50 p-4">
          <div class="flex">
            <div class="ml-3">
              <p class="text-sm font-medium text-red-800">
                Error creating event. Please try again.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const form = document.getElementById('eventForm') as HTMLFormElement;
  const imageInput = document.getElementById('image') as HTMLInputElement;
  const imageUrlInput = document.getElementById('imageUrlInput') as HTMLInputElement;
  const uploadStatus = document.getElementById('uploadStatus') as HTMLParagraphElement;
  const submitButton = document.getElementById('submitButton') as HTMLButtonElement;
  const submitText = document.getElementById('submitText') as HTMLElement;
  const submitSpinner = document.getElementById('submitSpinner') as HTMLElement;
  const successMessage = document.getElementById('successMessage') as HTMLElement;
  const errorMessage = document.getElementById('errorMessage') as HTMLElement;
  const cancelButton = document.getElementById('cancelButton') as HTMLButtonElement;

  imageInput.addEventListener('change', async (e) => {
    const file = (e.target as HTMLInputElement).files?.[0];
    if (!file) return;

    // Disable submit button while uploading
    submitButton.disabled = true;
    uploadStatus.textContent = 'Uploading image...';

    try {
      // Create FormData for image upload
      const formData = new FormData();
      formData.append('file', file);
      formData.append('upload_preset', 'dzaleka_events');

      // Upload to Cloudinary
      const response = await fetch(
        `https://api.cloudinary.com/v1_1/dcvwslmow/image/upload`,
        {
          method: 'POST',
          body: formData
        }
      );

      const data = await response.json();
      
      if (data.secure_url) {
        imageUrlInput.value = data.secure_url;
        uploadStatus.textContent = 'Image uploaded successfully!';
        uploadStatus.classList.remove('text-red-500');
        uploadStatus.classList.add('text-green-500');
      } else {
        throw new Error('Upload failed');
      }
    } catch (error) {
      console.error('Upload error:', error);
      uploadStatus.textContent = 'Failed to upload image. Please try again.';
      uploadStatus.classList.remove('text-green-500');
      uploadStatus.classList.add('text-red-500');
    } finally {
      // Re-enable submit button
      submitButton.disabled = false;
    }
  });

  // Prevent form submission if image is still uploading
  form.addEventListener('submit', (e) => {
    if (!imageUrlInput.value && imageInput.files?.length) {
      e.preventDefault();
      alert('Please wait for the image to finish uploading.');
    } else {
      // Show loading state
      submitButton.disabled = true;
      submitText.classList.add('hidden');
      submitSpinner.classList.remove('hidden');
    }
  });

  cancelButton.addEventListener('click', () => {
    window.location.href = '/events';
  });
</script>
