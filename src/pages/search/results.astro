---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import SearchBar from '../../components/ui/SearchBar.astro';

// Static mode for Netlify
export const prerender = true;

// Define internal applications
const internalApplications = [
  {
    slug: 'advocacy',
    title: 'Advocacy Application',
    description: 'Submit and track advocacy requests for refugee rights and support.',
    category: 'Legal Support'
  },
  {
    slug: 'legal',
    title: 'Legal Support Application',
    description: 'Access legal assistance and documentation services.',
    category: 'Legal Support'
  },
  {
    slug: 'emergency',
    title: 'Emergency Response',
    description: 'Request emergency assistance and support services.',
    category: 'Emergency'
  },
  {
    slug: 'leadership',
    title: 'Leadership Programs',
    description: 'Apply for community leadership and development programs.',
    category: 'Community'
  }
];

// Get all collections at build time
let services = [];
let events = [];
let resources = [];
let photos = [];

try {
  services = await getCollection('services') || [];
  events = await getCollection('events') || [];
  resources = await getCollection('resources') || [];
  photos = await getCollection('photos') || [];
} catch (error) {
  console.error('Error fetching collections:', error);
}

// Pass collections to client-side script
const collections = {
  services: services.map(item => ({
    slug: item.slug,
    data: item.data,
    collection: 'services'
  })),
  events: events.map(item => ({
    slug: item.slug,
    data: item.data,
    collection: 'events'
  })),
  resources: resources.map(item => ({
    slug: item.slug,
    data: item.data,
    collection: 'resources'
  })),
  photos: photos.map(item => ({
    slug: item.slug,
    data: item.data,
    collection: 'photos'
  })),
  applications: internalApplications.map(item => ({
    slug: item.slug,
    data: {
      title: item.title,
      description: item.description,
      category: item.category
    },
    collection: 'applications'
  }))
};
---

<MainLayout title="Search Results">
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-3xl mx-auto">
      <!-- Search Bar -->
      <div class="mb-8">
        <SearchBar section="search" />
      </div>

      <!-- Search Results -->
      <div id="searchResults" class="space-y-8">
        <div class="text-center py-12">
          <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto"></div>
          <p class="mt-4 text-gray-600">Loading search results...</p>
        </div>
      </div>
    </div>
  </main>
</MainLayout>

<script define:vars={{ collections }}>
// Helper function to safely get nested object properties
function getNestedValue(obj, path) {
  try {
    return path.split('.').reduce((acc, part) => acc?.[part], obj);
  } catch {
    return undefined;
  }
}

// Search function
function searchContent(items, searchQuery) {
  if (!searchQuery || !Array.isArray(items)) return [];
  
  const normalizedQuery = searchQuery.toLowerCase().trim();
  
  return items.filter(item => {
    try {
      // Safely get searchable fields
      const searchableFields = [
        getNestedValue(item, 'data.title'),
        getNestedValue(item, 'data.description'),
        getNestedValue(item, 'data.category'),
        item.slug?.replace(/-/g, ' '),
        getNestedValue(item, 'data.location.address'),
        getNestedValue(item, 'data.location.city'),
        getNestedValue(item, 'data.location.venue'),
        ...(getNestedValue(item, 'data.tags') || [])
      ];
      
      // Create searchable text from valid fields
      const searchableText = searchableFields
        .filter(field => typeof field === 'string' && field.length > 0)
        .join(' ')
        .toLowerCase();

      // Split query into words and remove empty strings
      const queryWords = normalizedQuery
        .split(/\s+/)
        .filter(word => word.length > 0);
      
      // Check if any query word matches
      return queryWords.some(word => {
        // Handle common variations
        const variations = [
          word,
          word.replace(/[aeiou]/g, ''), // Remove vowels
          word.replace(/[^a-z0-9]/g, ''), // Remove special characters
        ];
        
        return variations.some(variation => 
          searchableText.includes(variation)
        );
      });
    } catch (error) {
      console.error('Error searching item:', error);
      return false;
    }
  });
}

// Function to render a service card
function renderServiceCard(service) {
  return `
    <div class="bg-white rounded-lg shadow-sm p-6">
      <div class="flex items-start gap-4">
        <div class="w-16 h-16 bg-gray-100 rounded-lg overflow-hidden flex-shrink-0">
          <img
            src="${service.data.logo || '/images/placeholder-logo.png'}"
            alt="${service.data.title} logo"
            class="w-full h-full object-cover"
            onerror="this.src='/images/placeholder-logo.png'"
          />
        </div>
        <div class="flex-grow">
          <h3 class="text-lg font-semibold text-gray-900">
            <a href="/services/${service.slug}" class="hover:text-primary-600">
              ${service.data.title}
            </a>
          </h3>
          <p class="mt-2 text-gray-600">${service.data.description}</p>
          ${service.data.category ? `
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800 mt-2">
              ${service.data.category}
            </span>
          ` : ''}
        </div>
      </div>
    </div>
  `;
}

// Function to render an event card
function renderEventCard(event) {
  return `
    <div class="bg-white rounded-lg shadow-sm p-6">
      <div class="flex items-start gap-4">
        <div class="w-16 h-16 bg-gray-100 rounded-lg overflow-hidden flex-shrink-0">
          <img
            src="${event.data.image || '/images/placeholder-event.png'}"
            alt="${event.data.title} image"
            class="w-full h-full object-cover"
            onerror="this.src='/images/placeholder-event.png'"
          />
        </div>
        <div class="flex-grow">
          <h3 class="text-lg font-semibold text-gray-900">
            <a href="/events/${event.slug}" class="hover:text-primary-600">
              ${event.data.title}
            </a>
          </h3>
          <p class="mt-2 text-gray-600">${event.data.description}</p>
          <div class="flex items-center gap-2 mt-2">
            ${event.data.date ? `
              <span class="text-sm text-gray-500">
                ${new Date(event.data.date).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </span>
            ` : ''}
            ${event.data.category ? `
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800">
                ${event.data.category}
              </span>
            ` : ''}
          </div>
        </div>
      </div>
    </div>
  `;
}

// Function to render a photo card
function renderPhotoCard(photo) {
  return `
    <div class="bg-white rounded-lg shadow-sm p-6">
      <div class="flex items-start gap-4">
        <div class="w-16 h-16 bg-gray-100 rounded-lg overflow-hidden flex-shrink-0">
          <img
            src="${photo.data.image || '/images/placeholder-photo.png'}"
            alt="${photo.data.title}"
            class="w-full h-full object-cover"
            onerror="this.src='/images/placeholder-photo.png'"
          />
        </div>
        <div class="flex-grow">
          <h3 class="text-lg font-semibold text-gray-900">
            <a href="/photos/${photo.slug}" class="hover:text-primary-600">
              ${photo.data.title}
            </a>
          </h3>
          <p class="mt-2 text-gray-600">${photo.data.description || ''}</p>
          ${photo.data.tags?.length ? `
            <div class="flex flex-wrap gap-2 mt-2">
              ${photo.data.tags.map(tag => `
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800">
                  ${tag}
                </span>
              `).join('')}
            </div>
          ` : ''}
        </div>
      </div>
    </div>
  `;
}

// Function to render a resource card
function renderResourceCard(resource) {
  return `
    <div class="bg-white rounded-lg shadow-sm p-6">
      <div class="flex-grow">
        <h3 class="text-lg font-semibold text-gray-900">
          <a href="/resources/${resource.slug}" class="hover:text-primary-600">
            ${resource.data.title}
          </a>
        </h3>
        <p class="mt-2 text-gray-600">${resource.data.description}</p>
        <div class="flex items-center gap-2 mt-2">
          ${resource.data.date ? `
            <span class="text-sm text-gray-500">
              ${new Date(resource.data.date).toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </span>
          ` : ''}
          ${resource.data.category ? `
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800">
              ${resource.data.category}
            </span>
          ` : ''}
        </div>
      </div>
    </div>
  `;
}

// Function to render an application card
function renderApplicationCard(application) {
  return `
    <div class="bg-white rounded-lg shadow-sm p-6">
      <div class="flex-grow">
        <h3 class="text-lg font-semibold text-gray-900">
          <a href="/applications/internal/${application.slug}" class="hover:text-primary-600">
            ${application.data.title}
          </a>
        </h3>
        <p class="mt-2 text-gray-600">${application.data.description}</p>
        ${application.data.category ? `
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800 mt-2">
            ${application.data.category}
          </span>
        ` : ''}
      </div>
    </div>
  `;
}

// Get search query from URL
const urlParams = new URLSearchParams(window.location.search);
const query = urlParams.get('q')?.trim() || '';

// Perform search
const searchResults = {
  services: searchContent(collections.services || [], query),
  events: searchContent(collections.events || [], query),
  resources: searchContent(collections.resources || [], query),
  photos: searchContent(collections.photos || [], query),
  applications: searchContent(collections.applications || [], query)
};

// Calculate total results
const totalResults = Object.values(searchResults)
  .reduce((acc, curr) => acc + curr.length, 0);

// Render search results
const resultsContainer = document.getElementById('searchResults');
if (resultsContainer) {
  if (!query) {
    resultsContainer.innerHTML = `
      <div class="text-center py-12 bg-white rounded-lg shadow-sm">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">
          Enter a search term to begin
        </h2>
        <p class="text-gray-600">
          Search for services, events, resources, photos, and applications
        </p>
      </div>
    `;
  } else if (totalResults === 0) {
    resultsContainer.innerHTML = `
      <div class="text-center py-12 bg-white rounded-lg shadow-sm">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">
          No matching results found
        </h2>
        <p class="text-gray-600">
          Try adjusting your search terms or browse our categories
        </p>
      </div>
    `;
  } else {
    let html = '';
    
    if (searchResults.services.length > 0) {
      html += `
        <section>
          <h2 class="text-xl font-semibold text-gray-900 mb-4">Services</h2>
          <div class="space-y-4">
            ${searchResults.services.map(renderServiceCard).join('')}
          </div>
        </section>
      `;
    }
    
    if (searchResults.events.length > 0) {
      html += `
        <section>
          <h2 class="text-xl font-semibold text-gray-900 mb-4">Events</h2>
          <div class="space-y-4">
            ${searchResults.events.map(renderEventCard).join('')}
          </div>
        </section>
      `;
    }
    
    if (searchResults.applications.length > 0) {
      html += `
        <section>
          <h2 class="text-xl font-semibold text-gray-900 mb-4">Applications</h2>
          <div class="space-y-4">
            ${searchResults.applications.map(renderApplicationCard).join('')}
          </div>
        </section>
      `;
    }
    
    if (searchResults.photos.length > 0) {
      html += `
        <section>
          <h2 class="text-xl font-semibold text-gray-900 mb-4">Photo Gallery</h2>
          <div class="space-y-4">
            ${searchResults.photos.map(renderPhotoCard).join('')}
          </div>
        </section>
      `;
    }
    
    if (searchResults.resources.length > 0) {
      html += `
        <section>
          <h2 class="text-xl font-semibold text-gray-900 mb-4">Resources</h2>
          <div class="space-y-4">
            ${searchResults.resources.map(renderResourceCard).join('')}
          </div>
        </section>
      `;
    }
    
    resultsContainer.innerHTML = html;
  }
}

// Update page title
document.title = `Search Results ${query ? `for "${query}"` : ''}`;
</script>
