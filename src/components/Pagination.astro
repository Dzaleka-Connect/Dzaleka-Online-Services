---
interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
}

const { currentPage, totalPages, baseUrl } = Astro.props;

// Generate page numbers to display
function getPageNumbers(current: number, total: number) {
  const pages = [];
  const maxVisiblePages = 5;

  if (total <= maxVisiblePages) {
    // Show all pages if total is less than max visible
    for (let i = 1; i <= total; i++) {
      pages.push(i);
    }
  } else {
    // Always show first page
    pages.push(1);

    // Calculate start and end of visible pages
    let start = Math.max(2, current - 1);
    let end = Math.min(total - 1, current + 1);

    // Adjust if at the start or end
    if (current <= 2) {
      end = 4;
    }
    if (current >= total - 1) {
      start = total - 3;
    }

    // Add ellipsis if needed
    if (start > 2) {
      pages.push('...');
    }

    // Add middle pages
    for (let i = start; i <= end; i++) {
      pages.push(i);
    }

    // Add ellipsis if needed
    if (end < total - 1) {
      pages.push('...');
    }

    // Always show last page
    pages.push(total);
  }

  return pages;
}

const pages = getPageNumbers(currentPage, totalPages);

function getPageUrl(page: number) {
  return page === 1 ? baseUrl : `${baseUrl}/${page}`;
}
---

<nav class="flex items-center justify-between border-t border-gray-200 px-4 sm:px-0 mt-6" aria-label="Pagination">
  <!-- Previous Page -->
  <div class="-mt-px flex w-0 flex-1">
    {currentPage > 1 && (
      <a
        href={getPageUrl(currentPage - 1)}
        class="inline-flex items-center border-t-2 border-transparent pt-4 pr-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
      >
        <svg class="mr-3 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
          <path fill-rule="evenodd" d="M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z" clip-rule="evenodd" />
        </svg>
        Previous
      </a>
    )}
  </div>

  <!-- Page Numbers -->
  <div class="hidden md:-mt-px md:flex">
    {pages.map((page, index) => (
      page === '...' ? (
        <span class="inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-500">
          ...
        </span>
      ) : (
        <a
          href={getPageUrl(page)}
          class={`inline-flex items-center border-t-2 px-4 pt-4 text-sm font-medium ${
            currentPage === page
              ? 'border-primary-500 text-primary-600'
              : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700'
          }`}
          aria-current={currentPage === page ? 'page' : undefined}
        >
          {page}
        </a>
      )
    ))}
  </div>

  <!-- Next Page -->
  <div class="-mt-px flex w-0 flex-1 justify-end">
    {currentPage < totalPages && (
      <a
        href={getPageUrl(currentPage + 1)}
        class="inline-flex items-center border-t-2 border-transparent pt-4 pl-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
      >
        Next
        <svg class="ml-3 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
          <path fill-rule="evenodd" d="M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z" clip-rule="evenodd" />
        </svg>
      </a>
    )}
  </div>
</nav>
