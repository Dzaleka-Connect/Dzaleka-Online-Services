---
interface FaqItem {
  question: string;
  answer: string;
}

const faqs: FaqItem[] = [
  {
    question: "What services are available through Dzaleka Online Services?",
    answer: "We offer a range of services including application processing, resource access, event management, photo gallery submissions, and community support. You can explore all our services in detail on the Services page."
  },
  {
    question: "How do I submit an application for services?",
    answer: "To submit an application, navigate to the Applications section, select the service you need, fill out the required form, and submit. You'll receive a confirmation email with next steps."
  },
  {
    question: "Can I track the status of my application?",
    answer: "Yes! Once you submit an application, you'll receive a tracking number. Use this number in the Application Status section to check your application's progress."
  },
  {
    question: "How can I submit resources or photos to the platform?",
    answer: "Visit the Submit Resource or Submit Photo pages from our main navigation. Follow the guidelines provided, fill out the submission form, and upload your content. Our team will review and publish approved submissions."
  },
  {
    question: "What should I do if I encounter technical issues?",
    answer: "For technical issues, first check our troubleshooting guide in the Help Center. If the issue persists, contact our technical support team using the form below or email support@dzalekaonline.org."
  },
  {
    question: "How can I get involved in community events?",
    answer: "Browse our Events section to see upcoming activities. You can register for events, submit event proposals, or volunteer to help organize. We encourage active community participation!"
  },
  {
    question: "Is the platform available in different languages?",
    answer: "Currently, our platform is available in English. We're working on adding support for additional languages to better serve our diverse community."
  },
  {
    question: "How long does it take to process submissions?",
    answer: "We typically review and process submissions (photos, resources, or applications) within 2-3 business days. For urgent matters, please indicate this in your submission or contact us directly."
  },
  {
    question: "What happens to my personal information?",
    answer: "We take data privacy seriously. Your information is securely stored and used only for processing your requests and improving our services. Read our Privacy Policy for detailed information."
  },
  {
    question: "How can I provide feedback or suggestions?",
    answer: "We welcome your feedback! Use the contact form below, email us at feedback@dzalekaonline.org, or participate in our regular community feedback sessions."
  }
];
---

<div class="space-y-4">
  {faqs.map((faq, index) => (
    <div class="border rounded-lg hover:border-primary-500 transition-colors">
      <button
        class="w-full px-6 py-4 text-left focus:outline-none focus:ring-2 focus:ring-primary-500 rounded-lg"
        id={`faq-button-${index}`}
        aria-expanded="false"
        aria-controls={`faq-answer-${index}`}
      >
        <div class="flex items-center justify-between">
          <span class="font-medium text-gray-900">{faq.question}</span>
          <svg
            class="w-5 h-5 text-gray-500 transform transition-transform duration-200"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"
            />
          </svg>
        </div>
      </button>
      <div
        id={`faq-answer-${index}`}
        class="hidden px-6 pb-4 text-gray-600"
        role="region"
        aria-labelledby={`faq-button-${index}`}
      >
        <p class="prose prose-primary">{faq.answer}</p>
      </div>
    </div>
  ))}
</div>

<script>
  const faqButtons = document.querySelectorAll('[id^="faq-button-"]');

  faqButtons.forEach(button => {
    button.addEventListener('click', () => {
      const isExpanded = button.getAttribute('aria-expanded') === 'true';
      const answerId = button.getAttribute('aria-controls');
      const answer = document.getElementById(answerId!);
      const icon = button.querySelector('svg');

      button.setAttribute('aria-expanded', (!isExpanded).toString());
      answer?.classList.toggle('hidden');
      icon?.classList.toggle('rotate-180');
    });
  });
</script>