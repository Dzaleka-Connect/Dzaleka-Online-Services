---
interface Props {
  resource: {
    title: string;
    description: string;
    category: string;
    fileType: string;
    resourceUrl: string;
    lastUpdated: Date;
    languages: string[];
    thumbnailUrl?: string;
    author?: string;
  };
  slug: string;
}

const { resource, slug } = Astro.props;

const fileTypeIcons: Record<string, { icon: string; color: string }> = {
  pdf: { icon: '📄', color: 'text-red-600' },
  video: { icon: '🎥', color: 'text-blue-600' },
  document: { icon: '📝', color: 'text-gray-600' },
  link: { icon: '🔗', color: 'text-purple-600' },
  docx: { icon: '📎', color: 'text-blue-600' },
  pptx: { icon: '📊', color: 'text-orange-600' },
  xlsx: { icon: '📈', color: 'text-green-600' },
  audio: { icon: '🎧', color: 'text-pink-600' },
  zip: { icon: '📦', color: 'text-brown-600' }
};

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<article class="bg-white rounded-xl shadow-sm hover:shadow-lg transition-all duration-300">
  <div class="p-6">
    <div class="flex items-start gap-4">
      <div class="flex-shrink-0 w-12 h-12 flex items-center justify-center bg-gray-100 rounded-lg">
        <span class="text-2xl" role="img" aria-label={resource.fileType}>
          {fileTypeIcons[resource.fileType].icon}
        </span>
      </div>
      <div class="flex-grow">
        <h3 class="text-xl font-bold text-gray-900 mb-2">
          {resource.title}
        </h3>
        <p class="text-gray-600 mb-4">{resource.description}</p>
        
        <div class="flex flex-wrap gap-4 text-sm text-gray-500 mb-4">
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
            {resource.category}
          </div>
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
            </svg>
            {formatDate(resource.lastUpdated)}
          </div>
        </div>

        <div class="flex flex-wrap gap-2 mb-4">
          {resource.languages.map(lang => (
            <span class="px-2 py-1 text-sm bg-gray-100 text-gray-600 rounded-full">
              {lang}
            </span>
          ))}
        </div>

        <div class="flex items-center justify-between">
          <a
            href={resource.resourceUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors"
          >
            Access Resource
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </a>
          {resource.author && (
            <span class="text-sm text-gray-500">
              By {resource.author}
            </span>
          )}
        </div>
      </div>
    </div>
  </div>
</article>