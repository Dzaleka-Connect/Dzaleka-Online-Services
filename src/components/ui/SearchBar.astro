---
interface Props {
  placeholder?: string;
  initialValue?: string;
  section?: string;
  fullWidth?: boolean;
}

const {
  placeholder = 'Search...',
  initialValue = '',
  section = '',
  fullWidth = false
} = Astro.props;

// Determine the form action based on section
const formAction = section === 'search' ? '/search/results' : `/${section || ''}`;
---

<form
  action={formAction}
  method="GET"
  class:list={[
    'relative',
    {
      'w-full max-w-2xl mx-auto': fullWidth,
      'w-full max-w-md': !fullWidth
    }
  ]}
>
  <div class="relative">
    <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
      <svg
        class="w-4 h-4 text-gray-500"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 20 20"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"
        />
      </svg>
    </div>
    <input
      type="text"
      id="search-input"
      name="q"
      value={initialValue}
      class="block w-full p-3 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-primary-500 focus:border-primary-500"
      placeholder={placeholder}
      required
      minlength="2"
    />
    <button
      type="submit"
      class="absolute right-2 bottom-2 top-2 px-4 text-sm font-medium text-white bg-primary-600 rounded-lg hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300"
    >
      Search
    </button>
  </div>
</form>

<script>
// Ensure form is not submitted empty and trim input
document.querySelector('form')?.addEventListener('submit', (e) => {
  const input = document.getElementById('search-input') as HTMLInputElement;
  const value = input.value.trim();
  if (!value) {
    e.preventDefault();
    input.focus();
    return;
  }
  input.value = value;
});
</script>