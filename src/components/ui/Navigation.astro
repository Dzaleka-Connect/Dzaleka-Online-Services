---
import { navigationLinks } from '../../utils/navigationLinks';

const currentPath = Astro.url.pathname;
---

<nav class="sticky top-0 z-50 bg-white/80 backdrop-blur-md border-b border-gray-200">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <a href="/" class="flex items-center space-x-2">
        <span class="text-xl font-bold text-primary-600">Dzaleka Online Services</span>
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-1">
        {navigationLinks.map(({ href, label, icon }) => (
          <a
            href={href}
            class:list={[
              'flex items-center space-x-1 px-3 py-2 rounded-md text-sm font-medium text-gray-600',
              'hover:text-primary-600 hover:bg-primary-50 transition-colors opacity-70 hover:opacity-100',
              currentPath === href && 'opacity-100 border-b-2 border-primary-600'
            ]}
          >
            <Fragment set:html={icon} />
            <span>{label}</span>
          </a>
        ))}
      </div>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button" 
        class="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
        aria-expanded="false"
      >
        <span class="sr-only">Open main menu</span>
        <svg class="block h-6 w-6" id="menu-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
        <svg class="hidden h-6 w-6" id="close-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div class="hidden md:hidden" id="mobile-menu">
    <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t border-gray-200">
      {navigationLinks.map(({ href, label, icon }) => (
        <a
          href={href}
          class:list={[
            'flex items-center space-x-2 px-3 py-4 rounded-md text-base font-medium transition-colors',
            currentPath === href
              ? 'text-primary-600 bg-primary-50'
              : 'text-gray-600 hover:bg-gray-50 hover:text-primary-600'
          ]}
        >
          <Fragment set:html={icon} />
          <span>{label}</span>
        </a>
      ))}
    </div>
  </div>
</nav>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');

  function toggleMenu() {
    const isExpanded = mobileMenuButton?.getAttribute('aria-expanded') === 'true';
    mobileMenuButton?.setAttribute('aria-expanded', (!isExpanded).toString());
    mobileMenu?.classList.toggle('hidden');
    menuIcon?.classList.toggle('hidden');
    closeIcon?.classList.toggle('hidden');
  }

  mobileMenuButton?.addEventListener('click', toggleMenu);

  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as HTMLElement;
    if (!target.closest('#mobile-menu') && !target.closest('#mobile-menu-button')) {
      mobileMenu?.classList.add('hidden');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
      mobileMenuButton?.setAttribute('aria-expanded', 'false');
    }
  });

  // Set active state based on current path
  const currentPath = window.location.pathname;
  const navLinks = document.querySelectorAll('.nav-link');
  navLinks.forEach(link => {
    if ((link as HTMLAnchorElement).href === window.location.href) {
      link.classList.add('active');
    }
  });
</script>

<style>
  .nav-link {
    @apply flex items-center space-x-1 px-3 py-2 rounded-md text-sm font-medium text-gray-600 hover:text-primary-600 hover:bg-primary-50 transition-colors opacity-70 hover:opacity-100;
  }

  .nav-link.active {
    @apply opacity-100 border-b-2 border-primary-600;
  }

  .mobile-nav-link {
    @apply flex items-center space-x-2 px-3 py-4 rounded-md text-base font-medium text-gray-600 hover:text-primary-600 hover:bg-gray-50 transition-colors;
  }
</style>